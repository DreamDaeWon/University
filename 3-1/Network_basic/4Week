== 무선과 유선 ==

일단 아직까지는 무선보다 유선이 조금 더 빠르다. 
속도나 가격이 많이 비슷해짐, 설치가격도 원래 무선이 훨씬 비쌌는데 이제 비슷해짐
근데? 무선은 보안이 약하다는 치명적인 단점이 존재한다.

우리가 무선 공유기를 설치하면 그 곳을 Acess Point 라고 한다 줄여서 AP 라고 한다.
그 구간부터 일정 원 반경을 Cell공간 이라고 하는데 무선 공유기와 연결가능한 공간(반경 범위)를 뜻한다.

무선공유기는 star방식에 가깝다. unicast가 가능하기 때문이다.

-무선의 장점-
무선을 기본적으로 유선보다 설치가 쉽다. 유선 새로 깔려면 다 갈아엎어야 하니까.
또한 필요에 따라서 cell위치를 옮기기 쉽다. 예를들어 안방에 와이파이 안터지면 마루에 있는거 안방에 설치하면 된다.

-단점-
서비스를 받으려면 cell 범위 안에 있어야 한다.
보안에 취약하다.(사실 이게 젤 큰 단점임)


== LAN Architectures ==
렌 아키텍쳐는 렌 구조라는 말대로 어떻게 데이터를 얹고 어떻게 전송할지에 대한 것을 정하는 것이다.

Toplogy보다 조금 더 구체적이다.
그래서 그런지 이더넷처럼 구체적으로 정립된 내용을 다룬다.
다른것도 있겠지만 지금 업계표준은 이더넷이고 결국 우리는 이더넷만 다룬다 우히히~

렌 아키텍쳐의 대표적인 예로는 이더넷이 있다.
이더넷은 처음에 알로하넷 이라는 이름으로 만들어졌다.
알로하~ 는 하와이 인사말이다. 맞다 하와이가 섬들이 많은데 이 섬들끼리 통신하기 위해 만들어졌다.

근데? 잘만들었다 ㅋㅋ
여기서 잘만들었다는 것은 구현하기 쉽고, 가성비 좋고, 신뢰도가 있는 것을 말한다.
그래서 업계에서 광범위하게 사용하게 되었다.

이더넷에서는 독특한 용어를 사용한다.
(10 Base 5)와 같은 용어가 있는데 이것은 10mbps 속도로 500m커버하는 thicknet케이블을 말한다.
왜 thicknet냐? thicknet이 500m까지 커버 가능하기 때문이다. 저번에 했잖냐!

그럼? (10 Base 2)는? 여기서 2는 원래 thinnet가 185m까지 커버 가능한데 반올림해서 200m로 쳐줬다ㅋㅋ
그래서 10mbps속도로 200m커버하는 thinnet를 말한다.

IEEE 802.3x 이후부터 정립되었다.

자 그러면 이더넷에서 사용하는 중요한 키워드에 대해 알아보자

== CSMA/CD ==
이더넷 에서는 CSMA/CD라는 특징이 있다.

CS(Carrier Sense) - 운반 감지
먼저 캐리어 센스에 대해서 알아보자
운반 감지라는 뜻 답게 전선에 전기나 빛의신호를 확인해 아무도 데이터를 보내지 않는지 감시한다.
아무도 데이터를 안보내면? -> 내 데이터를 보낸다.
아쥬 쉽다.

그 다음은 MA(Multiple Access) - 다중 접속
이 정도 영단어? 다중접속? 아주쉽다. (사실 몰랐다)
암튼 여러 접속이 있어도 우선순위가 없는 특징이 있다는 말이다.


마지막! CD는 (Collision Detection) - 충돌 감지
오호 디텍션? 어렵다 근데 감지라는 뜻이다.
즉 충돌감지
앞에 CS와 비슷하지만 CS에서 조금 더 확장된 개념이다.

먼저 CS에서 확인을 했는데 없었다! 그러면 올려도 된다.
근데? 멀티쓰레드처럼, 통신도 여러 접속이 있으니까 
거의 비슷한 시간대에 전선의 전기나 빛의 신호를 감지하는 상황이 발생할 수도 있다.

그럼 두 곳에서 거의 동시에 확인하고 어? 없다! 올려~ 하면 데이터 충돌이 발생할 수 있다.
이것을 막기 위해서 나온 개념이 CD이다.

CD에서는 거의 동시에 확인했다는 것을 감지하여 둘 중 한 놈을 랜덤한 시간만큼 기다리게 한 뒤
올릴 수 있도록 한다.
랜덤한 시간대인 이유는 일정시간으로 하면 이 과정이 반복될 수 있기 때문이다.(예를 들어 3곳에서 동시에 접근했을 시)

자 이것들을 모아서 CSMA/CD 방식이라고 한다.

이 방식은 구현이 쉽다!! 야호~ 최고장점

그러나 접속자의 수가 많아지면 충돌이 빈번히 발생하기에 새로운 cell을 만들어줘야 서비스 품질을 높일 수 있다.
그래서 우리가 많은사람이 하나의 사이트에 접속하면 렉걸리는 것이다.(특히 수강신청 ㅡㅡ*)


== 블루투스 ==

요즘 블루투스 이어폰 이런거 많이쓴다. 나도 쓴다 우히히~

블루투스는 piconet방식을 사용한다. pico는 pico는 공작새에서 따온 이름이다.

piconeet방식은 마스터와 슬레이브가 있다.

공작새처럼

slave	slave	slave
|	/	/
|      /       /
|     /      /
|    /     /
master

이런 구조로 연결되어 있다. 마치 공작새의 꼬리같다.


마스터 슬레이브한테 데이터를 주고받을 것이 있는지? 물어보는 방식이다.
그렇기에 슬레이브가 많이 붙으면 느려진다.

우리가 블루투스 이어폰을 사용하면 내 휴대폰이 마스터가 되고, 블루투스 이어폰이 슬레이브가 된다.

근데? 블루투스 이어폰은 음질이 안좋다(사실 막귀라 몰랐다.)

왜 안좋냐면 블루투스는 데이터 압축을 많이하기 때문이다.
데이터를 압축할 때는 2가지 방식이 있다.
1. 데이터 손실 안나게 하는방법
2. 손실나는 방법

당연히 2번이 데이터를 더 작게만들 수 있다.
그래서 블루투스는 2번 방식을 사용한다.
이 이유 때문에 블루투스 이어폰은 음질이 안좋다.

유튜브에서 노래를 튼다면?

네트워크 <-압축-> 스마트폰 <-압축-> 블루투스 이어폰

이런 구조라 음질이 매우 안좋다.

그래서 네트워크 스트림이라는 방식이 나왔다.

해당 방식은 네트워크에서 직통으로 이어폰이나 스피커에 출력하는 방식이다.
이 경우에 스마트폰은 어떤 노래를 틀까? 정도 고르는 리모콘이 된다.


== hand off 와 로밍의 차이 ==

각 통신사에서 설치한 기지국들이 전국에 쫙 깔려있어서 우리가 데이터가 터지는데
이 기지국들도 cell범위가 있기 때문에 cell 전국적으로 닿도록 많이 설치했을 것이다.
예를 들어 내가 부천에서 인천으로 가면
부천cell -> 인천cell 이렇게 넘어갈 텐데
이 때!! 해당 구역을 운영하고 있는 통신사가 kt->kt 이런식으로 같으면 hand off이다.
만약 다르다? 로밍이다. 통신사끼리 교류해야하기 때문에 우리가 해외나갈 때 로밍하면
추가비용이 발생하는 것이다.


== FDDI ==
이더넷에 밀린 슬픈 렌 아키텍처 FDDI를 봐보자

FDDI는 결론적으로 이더넷에게 가격 경쟁으로 밀렸다.
데이터 전송을 위해 설계된 만큼 기가 단위의 전송 속도도 지원했는데?
이 또한 기가 이더넷이 나오면서 밀렸다.
비동기 전송 모드인 ATM이라는 개념도 나왔는데?
밀렸다 ㅋㅋ

그냥 그나마 속도 빠른것 때문에 사용하는 곳이 있었는데 밀렸다.

== back bone과 local loop ==

back bone는 척추라는 뜻이다. 척추? 매우 핵심적인 뼈이다.
척추처럼 매우 핵심적인 연결부라는 뜻이다.
큰 전화국 끼리의 연결부를 말한다.

local loop는? 예상했다시피 전화국에서 우리 아파트나 집으로 연결하는 구간을 말한다.



== 물리 장치들 ==

- 리피터 -
전송매체로부터 신호를 받아 잡음을 제거해준다. 또한 감소한 신호를 키워준다.
물리계층에 속하는 L1장비이다. 독단적으로보타는 모듈안에 다른기능과 함계 포함되어있는(빌트 인) 형태로들어있는 경우가 많다.


- HUB -
무지능(생각이 없다), 이것도 물리계층에 속한다 L1
여기서 무지능이란? -> 신호가 오면 그냥 받은걸 꽂혀있는 전부에게 뿌린다.
hub는 이게 다임 ^오^


- Bridge -
브릿지는 불필요한 데이터가 엉뚱한 곳에 가는 것을 차단하거나 연결하는 것을 판단한다.
두 세그먼트 사이를 연결한다.
연결된 애들 전부의 mac어드레스를 테이블로 저장하고 있다.
그것을 읽어서 발신자와 목적지를 판단한다.
LAN 세그먼트간의 데이터 이동을 좀 더 효율적으로 해준다.
L2장비임 데이터가 굳이 안가도 되는건 막아버리기 때문


- 스위치 -
브릿지보다 성능좋다. 같은 L2장비이다.
왜 성능 더 좋냐면 브릿지 - 직렬, 스위치 - 병렬 이기 때문이다.
즉 동시에 처리한다.

이것도 MAC주소 테이블을 가지고 있다.

데이터가 오면 데이터를 본인의 빈 공간에 저장한다.
저장하는 이유는 오류검사를 위해서다.
오류검사를하고 괜찮으면 보낸다.

체크썸비트로 오류검사를 한다.
이 방식을 사용하는 스위치를 store - and - Forward 스위치라고 한다.


그럼 다른 방식은?

cut through 스위치가 있다. 
이 방식은 스위치가 검사를 안하고 그냥 보내는 방식이다.
저장이나 검사 과정이 없기에 더 빠르다.


만약 스위치에 기능을 더 넣어서 라우터를 포함시키면? L23 장치이고
포트번호를 관리한다? L24 스위치 장치이다.


== 라우터 ==
장치들이지만 좀 더 깊게 살펴본다.

라우터는 네트워크 패킷의 흐름을 제어한다. 이 말이 뭐냐?

네트워크와 네트워크를 연결하고, 
쓸데없는 데이터를 거르고,
데이터를 어느 경로로 전송해야 가장 빠른지 판단한다.

매우 중요한 장치이다.

자 먼저 쓸데없는 데이터를 거른다? 이게 뭔말이냐면
광고성 데이터같이 브로드캐스팅처럼 막 뿌려댄 데이터를 거른다.


경로를 판단하는 것은 라우터 안에 알고리즘이 있고 그 알고리즘에 따라 판단한다.
ip주소를 이용하여 판단하는데 하나의 네트워크마다 라우터가 있고,
A라우터 -> B라우터로 갔을 경우
B라우터가 목적지가 아닌 경우에
B라우터는 B라우터에 연결된 라우터들을 확인하고,
가장 최적의 다음 라우터 경로를 찾아 보낸다. 

이렇게 자신과 연결된 라우터를 확인하고 보낸다.
가장 짧은 경로로 보내려고 하지만 해당 경로가 트래픽이 발생하여 너무 많이 몰려있어서 데이터 전송이 느릴것 같으면
다른 경로로 돌아가기도 한다.

이렇게 다양한 상황을 보고 판단하고 경로를 설정하는 알고리즘을 잘짠 라우터가 잘팔린다.

경로를 판단할 때는 2가지 방식이 있다.

1. 다이나믹 라우팅 - 이름부터 동적이다.
하나 움직일 때마다 가장짧은 경로를 계산한다.

2. 스태틱 라우팅 - 정적이다.
정적? 즉 루트가 정해져있다는 소리다.
이 경우는 가는 경로의 관리가 가능하다.
예를들어 회사에서 자기들끼리의 연구자료같은 것들을 공유할 때
라우터 경로를 미리 설치하고 본인들만 접근 가능하게 
회사 라우터가 아닌 라우터들과 연결 안해두면 보안을 철저하게 사용할 수 있다.

그래서 보통은 보안이 중요하고 네트워크에 대한 제어권이 확실할 때 사용한다.
대신 중간에 고장나 있는 라우터가 있다? -> 망했다 람쥐..(우회가 불가능하다)




















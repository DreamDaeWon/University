[문제] save할 수 있는 코드를 작성하고 실행되게 하라!



[문제] save.cpp 파일로 분리하고 main 에는 save(string FileName); 만 있도록 하자




[문제] main을 수정하면 안됨. 의도대로 실행되게 하자
//---------
int main()
//---------
{
	int a { 1 }, b { 2 };

	change( a, b );

	std::cout << a << ", " << b << std::endl; // 의도 - 2, 1 출력되어야 한다.
	save("메인.cpp");
}





// [문제] 랜덤 int값 1000개를 화면에 출력하라




// [문제] 랜덤 int값 1000개를 화면에 출력하라. 출력값을 8칸에 맞춰라.




// [문제] 랜덤 int값 1000개를 생성하고 메모리에 저장하라
// 저장된 값 중에서 가장 큰 값을 찾아라.
// 찾은 값을 화면에 출력해라




// [문제] a에 있는 값을 파일 "int 1000개.txt"에 텍스트 그대로 저장하라
	// 화면 출력한 것과 같은 형태로 - 파일을 열었을때 int값을 사람이 읽을 수 있도록




// [문제] 파일 "int 1000개.txt"에는 int값 1000개가 text mode로 기록되어 있다.
// 값을 읽어 화면에 출력하라






// [문제] 파일 "int 1000개.txt"에는 int값 1000개가 text mode로 기록되어 있다.
// 메모리로 다 읽어 와라.
// 가장 큰 값을 찾아 화면에 출력하라.
// 화면에 출력된 큰 값을 답지에 적어라.




// [문제] e-class에서 다운받은 "진짜 랜덤" 파일에는 int값 10만개가 있다.
// 파일은 binary 모드로 열었고 write 함수를 사용하여 int값을 기록하였다.
// int값 10만개를 메모리로 읽어와라.
// 가장 큰 값과 작은값을 화면에 출력하라.
// 출력된 값도 답지에 쓰자.										(10점)



// [문제] e-class에서 다운받은 "진짜 랜덤" 파일에는 int값 10만개가 있다.
// 파일은 binary 모드로 열었고 write 함수를 사용하여 int값을 기록하였다.
// int값 10만개를 contiguous메모리로 읽어와라.
// 가장 큰 값과 작은값을 화면에 출력하라.
// 출력된 값도 답지에 쓰자.										(10점)






// [문제] Dog객체 10만개를 binary 모드로 연 파일 "Dog 10만마리"에 저장하였다.
// 파일의 write 함수를 사용하여 객체 메모리 전체를 그대로 저장하였다.
// 파일에 있는 Dog 객체 전체를 메모리로 읽어와라
// name과 id를 화면에 출력하라.






// [문제] Dog객체 10만개를 binary 모드로 연 파일 "Dog 10만마리"에 저장하였다.
// 출력 연산자 << 를 사용하여 저장하였다.
// 함수는 다음과 같다.
//		friend ostream& operator<<(ostream& os, const Dog& dog) {
//			os.write((char*)&dog,sizeof(Dog));
//			return os;
//		}



// [문제] 다음 코드가 실행되게 한다.
	Dog dog;
	for (int i = 0; i < 10; ++i)
	{
		in >> dog;
		std::cout << dog << std::endl;
	}



	// [문제] 한 번에 메모리에 읽어온다.




	// [문제] 양의 정수 num(int의 max값까지는 받자)을 입력받아라.
	// num개 만큼 int를 저장할 메모리를 확보하라.
	// 메모리의 내용을 1부터 시작하는 정수로 채워라
	// 메모리에 저장한 int의 합계를 출력하라.
	// 이 과정을 영원히 반복하라.




// [문제] "main.cpp"에 있는 소문자를 모두 대문자로 바꿔 "메인 대문자.cpp"에 저장하라





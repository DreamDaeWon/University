정렬 알고리즘은 다양한종류가 있다.

1. 선택정렬 (Selection sort)

선택정렬은 제자리 정렬(in_place sorting) 알고리즘의 하나이다.

여기서 제자리 정렬 알고리즘이란? 정렬되지 않은 값을이 들어있는 배열 이외에 다른 추가 메모리를 요구하지
않는 것을 말한다.

하는 방법은
1. 주어진 배열 중에서 최소값을 찾는다.
2. 찾은 값을 맨 앞에 위치한 값과 교체한다
3. 맨처음 위치를 제외한 나머지 배열을 같으 방법으로 교체한다.
4. 이 방법을 반복하면서 하나의 원소만 남을 때까지 위의 1~3 과정을 반복한다.

해당 방법은 시간복잡도가 O(n^2) (n**2)이다.


2. 삽입정렬(insertion sort) 알고리즘

삽입정렬 알고리즘은 비유를 들자면 손안의 카드를 정렬하는 방법과 유사하다고 한다.
내 손안에 있는 패들을 정렬한 후 새로운 카드를 내 손에 넣을 때 올바른 자리를 찾아 삽입한다.
이것을 새로 삽입될 카드의 수만큼 반복하게 되면 전체 카드가 생성된다.

하는 방법은

먼저 삽입하기 전 삽입을 받을 배열은 정렬되어있어야 한다.

1. 새로 넣어야 할 정보를 확인한다.
2. 기존에 정렬된 배열들을 두 번째 자료부터 순차적으로 보면서 그 앞(왼쪽)의 자료들과 비교 후
삽입할 위치를 지정한다.
3. 그 후 삽입할 위치와 그 오른쪽에 있는 자료들을 한 칸씩 뒤로 이동시킨다.
4. 이동시킨 후 삽입할 위치에 삽입할 정보를 넣는다.


삽입정렬의 시간복잡도는 O(n^2) 이다.

3. 버블정렬(bubble sort) 알고리즘

버블정렬 알고리즘은 서로 인접한 두 원소를 검사해서 정렬하는 알고리즘이다.
인접한 2개의 원소를 비교하여 크기가 순서대로 되어있지 않으면 교환한다.

- 앞서 설명한 선택정렬과 기본 개념이 유사함

하는 방법은

1. 첫번째-두번째, 두번째-세번째 이런식으로 인접한 두 원소를 비교해서 오름차순 또는 내림차순에 맞게 교환한다.
2. 이런식으로 마지막-1번째까지 비교하여 교환하게 되면 맨 끝에있는 자료는 정렬된다.
  이렇게 모든 자료가 정렬될 때까지 반복하면 된다.

버블정렬의 시간복잡도는 O(N^2) 이다.


4. 병합정렬 (marge sort) 알고리즘
합병정렬이라고도 하는 병합정렬 알고리즘은 분할 정복 알고리즘의 하나이다.

여기서 분할 정복 알고리즘이란 문제를 작은 2개의 문제로 분리하고 각각 해결한 뒤 결과를 모아서
원래의 문제를 해결하는 전략이다.

하는 방법은

1. 리스트의 길이가 0또는 1이면 이미 정렬된 것으로 본다.
2. 아닌 경우 리스트를 절반으로 잘라 비슷한 크기의 두 부분 리스트로 나눈다.
3. 각 부분 리스트를 재귀적으로 합병 정렬을 이용해 정렬한다.
4. 두 부분 리스트를 다시 하나의 정렬된 리스트로 합병한다.

크게는 이렇게 하지만 병합정렬이라는 이름답게 실제로 정렬되는 부분은 병합을 할 때 정렬된다.

병합을 할 때 정렬되는 방법은

1. 나누어진 두 개의 리스트 값들을 하나씩 비교하여 두 개의 리스트의 값 중에서 더 작은 값을 새로운 리스트로
옮긴다.
2. 둘 중에서 하나가 끝날 때까지 이 과정을 되풀이한다.
3. 둘 중에서 하나의 리스트가 먼저 끝나게 되면 나머지 리스트의 값들을 전부 새로운 리스트로 복사한다.
4. 새로운 리스트를 원래의 리스트로 옮긴다.

위 과정을 반복하면 된다. 요약하면 3가지로 볼 수 있다.
분할, 정복, 결합

병합정렬 알고리즘의 시간복잡도는 O(nlog2 n) 이다.

5. 힙 정렬(heap sort) 알고리즘

먼저 힙은 완전이진트리의 일종으로 우선순위 큐를 위하여 만들어진 자료구조이다.

힙 정렬은 최대 힙 트리나 최소 힙 트리를 구성해 정렬을 하는 방법이다.

내림차순은 최대 힙, 오름차순은 최소 힙을 구성하면 된다.

하는 방법은

1. 정렬해야 할 n개의 요소들로 최대 또는 최소힙(완전 이진 트리 형태)을 만든다.
2. 그 다음으로 한 번에 하나씩 요소를 힙에서 꺼내서 배열의 뒤부터 저장하면 된다.
3. 삭제되는 요소들(최댓값부터 삭제)은 값이 감소되는 순서로 정렬되게 된다.(내림차순이면)

힙 정렬 알고리즘의 시간복잡도는 O(nlog2 n) 이다.

6. 퀵 정렬(quick sort) 알고리즘

퀵 정렬은 다른 원소와의 비교만으로 정렬을 수행하는 비교 정렬에 속한다.

퀵 정렬도 병합정렬 알고리즘과 같이 분할정복 알고리즘의 하나이다.
평균적으로 매우빠른 수행 속도를 자랑한다.

병합정렬과 달리 퀵 정렬은 리스트를 비균등하게 분할한다.

하는 법은
1. 리스트 안에 있는 한 요소를 선택한다. 이렇게 고른 원소를 피벗 이라고 한다.
2. 피벗을 기준으로 피벗보다 작은 요소들은 모두 피벗의 왼쪽으로 옮겨지고 피벗보다 큰 요소들은 모두 피벗의
오른쪽으로 옮겨진다.
3. 피벗을 제외한 왼쪽리스트와 오른쪽 리스틀 정렬한다.
4. 부분 리스트들이 더 이상 분할이 불가능할 때까지 반복한다.

병합정렬과 다른 점은 합칠 때 정렬하는 것이 아닌 정렬을 하고 합친다는 점이다.

퀵 정렬 알고리즘의 시간복잡도는 O(nlog2 n)이다.








==Greedy==

그리디의 뜻은 욕심쟁이이다.

말 그대로 지금 보이는 최대 값 지금 보이는 가장 좋은 것을 고른다.

그리디 알고리즘은 한 번 선택하면, 절대로 번복하지 않는다.


동전 거스름돈이 가능한 이유는 우리나라 동전이 1 10 50 100 500 1000 이런식으로 아래 숫자를 더해서 위의
숫자를 만들 수 있도록 발행되었기 때문이다. 16원 이런식으로 있으면 불가능

큰 수부터 체크하면서 동전을 담아낸다. (이것이 욕심쟁이임)



==최소 신장 트리를 다루기 위해서 필요한 것들==


(spanning)신장 : 뭔가 뻗어나간다 라는 뜻

즉 얼마나 적게 뻗어나간 트리냐 라는 뜻이다.



트리란 무엇인가?

트리는 그래프의 일종

루트가 존재하고 노드들이 부모 노드들로부터 연결되어있음



그럼 그래프는?
노드들ㄲ리 연결되어있는 구조

방향성이 있으면 directed 한쪽으로만 가는게 가능

없으면 undirected 양쪽으로 왔다갔다 가능



cyclic : 사이클이 존재

Acyclic : 사이클이 없음


그럼 여기서 트리는? Acyclic이다.


==adjacency Matrix== 
노드의 개수가 3이라면 3x3 Matrix를 만들어서

해당 노드에서 다른 노드로 갈 수 있다면 1 못간다면 0 으로 표현하는 방법


만약 연결되어 있는데 인접한 간선이 없는 경우에는 (갈 수 있는 방법이 없는 경우)
무한대로 표시한다. 8을 눕혀~





==adjacency List==

파이썬에서 어떤 자료가 존재하지 않는지를 확인하는 방법은 상수시간이다 O(1)
set을 사용하면 좋다.
dictionary를 사용해도 좋다.


1 - set 또는 dictionary
2 - set 또는 dictionary
3 - set 또는 dictionary
4 - set 또는 dictionary

이런식으로 둔다. 여기서 1, 2, 3, 4 를 묶는 자료형은 배열이나. dictionary로 해도 상관없다.


dictionary 도 []로 접근하고 array도 []로 접근하기 때문에

adjacency list 와 adjacency matrix 모두 [][] 이런식으로 접근한다.

접근방식이 같은 장점이 있다.


==union find==

해당 그래프에서 사이클이 있는 지 확인하는 방법이다.


노드들이 연결되어있지 않고 막 흩뿌려져 있을 때

모든 노드들 각각의 루트노드를 저장한다.


그리고 노드들을 연결할 때 두 노드들의 루트 노드 중에서 더 작은 수를 루트로 설정한다.

그런식으로 연결하면

각 노드들을 연결할 때 루트 노드가 같은 노드들끼리는 합치지 않아서 사이클을 방지할 수 있다.


?????





==데이터 셋==

edges 는 간선을

cities는 정점을 나타냄 (이름 ,x, y)
앞으로 많이 사용할 것임


--교수님 코드 사용방법--

왼쪽 쉬프트 + r 은 다음 데이터 셋 보기

그냥 r만 누르면 해당 데이터 다시 보기

오른쪽 쉬프트 + r 은 랜덤한 데이터로 보기























